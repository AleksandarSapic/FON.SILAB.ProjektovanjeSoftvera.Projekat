package main.form;

import communication.Response;
import domain.TimeTable;
import java.awt.Frame;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import main.controller.IController;
import main.tableModel.SearchDisciplineTableModel;

public class SearchTimeTableForm extends javax.swing.JDialog {

    private final Frame parent;
    private final IController controller;
    private List<TimeTable> showedTimeTables = new ArrayList<>();

    /**
     * Creates new form ReadDisciplineForm
     *
     * @param parent
     * @param modal
     * @param controller
     * @throws java.lang.Exception
     */
    public SearchTimeTableForm(Frame parent, boolean modal, IController controller) throws Exception {
        super(parent, modal);
        this.parent = parent;
        this.controller = controller;
        showedTimeTables = new ArrayList<>();
        initComponents();
        loadAllCompetitions();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisciplines = new javax.swing.JTable();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitle.setText("Sve discipline");

        tblDisciplines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDisciplines);

        lblSearch.setText("Pretražite discipline po nazivu:");

        btnSearch.setText("Pretraži");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch))
                    .addComponent(jScrollPane1))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String searchParam = txtSearch.getText();
        Response response = controller.searchTimetables(searchParam);
        if (response.getException() != null) {
            if (response.getException() instanceof IOException) {
                showError("Sistem je pao.");
                dispose();
                parent.dispose();
                return;
            }
            showError(response.getException().getMessage());
            dispose();
            return;
        }
        showedTimeTables = (List<TimeTable>) response.getResult();
        if (showedTimeTables.isEmpty()) {
            showError("Sistem ne može da nađe discipline po zadatoj vrednosti");
        } else {
            showMessage("Sistem je našao discipline po zadatoj vrednosti");
        }
        fillTable(showedTimeTables);
    }//GEN-LAST:event_btnSearchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblDisciplines;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void fillTable(List<TimeTable> disciplines) {
        SearchDisciplineTableModel searchDisciplineTableModel = new SearchDisciplineTableModel(disciplines);
        tblDisciplines.setModel(searchDisciplineTableModel);
    }

    private void loadAllCompetitions() throws Exception {
        Response response = controller.getAllTimetables();
        if (response.getException() != null) {
            System.out.println(response.getException().getMessage());
            throw response.getException();
        }
        showedTimeTables = (List<TimeTable>) response.getResult();
        if (showedTimeTables.isEmpty()) {
            showMessage("Trenutno ne postoji ni jedna uneta disciplina.");
            return;
        }
        fillTable(showedTimeTables);
    }

    private void showMessage(Object message) {
        JOptionPane.showMessageDialog(this, message);
    }

    private void showError(Object errorMessage) {
        JOptionPane.showMessageDialog(this, errorMessage, "Greška", JOptionPane.ERROR_MESSAGE);
    }
}
