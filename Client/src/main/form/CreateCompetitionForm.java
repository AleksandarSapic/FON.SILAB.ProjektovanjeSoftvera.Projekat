package main.form;

import communication.Response;
import domain.CompetitionType;
import domain.Discipline;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import main.controller.IController;

public final class CreateCompetitionForm extends javax.swing.JDialog {

    private List<CompetitionType> allTypes = new ArrayList<>();
    private List<Discipline> allDisciplines = new ArrayList<>();
    private List<Discipline> selectedDisciplines = new ArrayList<>();
    private CompetitionType selectedType = null;
    private final IController controller;
    private final java.awt.Frame parent;

    /**
     * Creates new form CreateCompetitionForm
     *
     * @param parent
     * @param modal
     * @param controller
     * @throws java.lang.Exception
     */
    public CreateCompetitionForm(java.awt.Frame parent, boolean modal, IController controller) throws Exception {
        super(parent, modal);
        initComponents();
        this.controller = controller;
        this.parent = parent;
        prepareForm();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblType = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox<>();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblDateStart = new javax.swing.JLabel();
        cmbDayStart = new javax.swing.JComboBox<>();
        cmbMonthStart = new javax.swing.JComboBox<>();
        cmbYearStart = new javax.swing.JComboBox<>();
        lblDateEnd = new javax.swing.JLabel();
        cmbDayEnd = new javax.swing.JComboBox<>();
        cmbMonthEnd = new javax.swing.JComboBox<>();
        cmbYearEnd = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        lblID = new javax.swing.JLabel();
        lblDisciplines = new javax.swing.JLabel();
        cmbDiscipline = new javax.swing.JComboBox<>();
        btnAddDiscipline = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        disciplineList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kreiranje takmičenja");

        lblType.setText("Tip takmičenja");

        cmbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTypeActionPerformed(evt);
            }
        });

        lblName.setText("Naziv takmičenja");

        lblDateStart.setText("Datum početka");

        cmbDayStart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbMonthStart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbYearStart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblDateEnd.setText("Datum kraja");

        cmbDayEnd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbMonthEnd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbYearEnd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSave.setText("Sačuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblDisciplines.setText("Discipline");

        cmbDiscipline.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAddDiscipline.setText("Dodaj");
        btnAddDiscipline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDisciplineActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(disciplineList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDateStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(lblType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDateEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDisciplines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave))
                            .addComponent(cmbType, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(cmbDayStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbMonthStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbYearStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbDiscipline, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(cmbDayEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbMonthEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbYearEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAddDiscipline)))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblType, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDayStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMonthStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbYearStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDayEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMonthEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbYearEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbDiscipline, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDisciplines, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAddDiscipline)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnSave))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String name = txtName.getText();

        String dayStart = cmbDayStart.getSelectedItem().toString();
        String monthStart = cmbMonthStart.getSelectedItem().toString();
        String yearStart = cmbYearStart.getSelectedItem().toString();

        String dayEnd = cmbDayEnd.getSelectedItem().toString();
        String monthEnd = cmbMonthEnd.getSelectedItem().toString();
        String yearEnd = cmbYearEnd.getSelectedItem().toString();

        Response response = controller.addCompetition(name, dayStart, monthStart, yearStart, dayEnd, monthEnd, yearEnd, selectedType.getId(), getListOfSelectedDisciplinesIds());
        if (response.getException() != null) {
            if (response.getException() instanceof IOException) {
                showError("Sistem je pao.");
                dispose();
                parent.dispose();
                return;
            }
            showError(response.getException().getMessage());
            dispose();
        } else {
            showMessage(response.getResult());
            int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Da li želite da nastavite sa unosom takmičenja?",
                    "Kreiranje", JOptionPane.YES_NO_OPTION);
            if (showConfirmDialog == 0) {
                setDefaultValues();
            } else {
                dispose();
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnAddDisciplineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDisciplineActionPerformed
        String selectedDiscipline = (String) cmbDiscipline.getSelectedItem();
        for (Discipline discipline : selectedDisciplines) {
            if (selectedDiscipline.equals(discipline.getName())) {
                showMessage(selectedDiscipline + " ste već dodali.");
                return;
            }
        }
        for (Discipline discipline : allDisciplines) {
            if (selectedDiscipline.equals(discipline.getName())) {
                selectedDisciplines.add(discipline);
            }
        }
        DefaultListModel model = new DefaultListModel();
        for (Discipline discipline : selectedDisciplines) {
            model.addElement(discipline.getName());
        }
        disciplineList.setModel(model);
    }//GEN-LAST:event_btnAddDisciplineActionPerformed

    private void cmbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTypeActionPerformed
        String selectedTypeString = (String) cmbType.getSelectedItem();
        for (CompetitionType type : allTypes) {
            if (type.getName().equals(selectedTypeString)) {
                selectedType = type;
                break;
            }
        }
    }//GEN-LAST:event_cmbTypeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDiscipline;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbDayEnd;
    private javax.swing.JComboBox<String> cmbDayStart;
    private javax.swing.JComboBox<String> cmbDiscipline;
    private javax.swing.JComboBox<String> cmbMonthEnd;
    private javax.swing.JComboBox<String> cmbMonthStart;
    private javax.swing.JComboBox<String> cmbType;
    private javax.swing.JComboBox<String> cmbYearEnd;
    private javax.swing.JComboBox<String> cmbYearStart;
    private javax.swing.JList<String> disciplineList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDateEnd;
    private javax.swing.JLabel lblDateStart;
    private javax.swing.JLabel lblDisciplines;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblType;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    private void setDefaultValues() {
        try {
            txtName.setText("");
            loadCompetitionTypes();
            prepareDateSection();
            cmbDiscipline.setSelectedIndex(0);
            selectedDisciplines = new ArrayList<>();
            DefaultListModel model = new DefaultListModel();
            disciplineList.setModel(model);
        } catch (Exception ex) {
            showError(ex.getMessage());
            dispose();
        }
    }

    void prepareForm() throws Exception {
        loadCompetitionTypes();
        loadDisciplines();
        prepareDateSection();
    }

    private void loadCompetitionTypes() throws Exception {
        cmbType.removeAllItems();
        Response response = controller.getAllCompetitionTypes();
        if (response.getException() != null) {
            throw response.getException();
        }
        allTypes = (List<CompetitionType>) response.getResult();
        for (CompetitionType type : allTypes) {
            cmbType.addItem(type.getName());
        }
    }

    private void loadDisciplines() throws Exception {
        cmbDiscipline.removeAllItems();
        Response response = controller.getAllDisciplines();
        if (response.getException() != null) {
            throw response.getException();
        }
        allDisciplines = (List<Discipline>) response.getResult();
        for (Discipline discipline : allDisciplines) {
            cmbDiscipline.addItem(discipline.getName());
        }
    }

    private void prepareDateSection() {
        cmbDayStart.removeAllItems();
        cmbDayEnd.removeAllItems();
        for (int i = 1; i <= 31; i++) {
            cmbDayStart.addItem(String.format("%02d", i));
            cmbDayEnd.addItem(String.format("%02d", i));
        }

        cmbMonthStart.removeAllItems();
        cmbMonthEnd.removeAllItems();
        for (int i = 1; i <= 12; i++) {
            cmbMonthStart.addItem(String.format("%02d", i));
            cmbMonthEnd.addItem(String.format("%02d", i));
        }

        cmbYearStart.removeAllItems();
        cmbYearEnd.removeAllItems();
        for (int i = LocalDate.now().getYear(); i <= LocalDate.now().getYear() + 5; i++) {
            cmbYearStart.addItem(i + "");
            cmbYearEnd.addItem(i + "");
        }
    }

    private List<Integer> getListOfSelectedDisciplinesIds() {
        List<Integer> ids = new ArrayList<>();
        for (Discipline discipline : selectedDisciplines) {
            ids.add(discipline.getId());
        }
        return ids;
    }

    private void showMessage(Object message) {
        JOptionPane.showMessageDialog(this, message);
    }

    private void showError(Object errorMessage) {
        JOptionPane.showMessageDialog(this, errorMessage, "Greška", JOptionPane.ERROR_MESSAGE);
    }
}
